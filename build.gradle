plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'com.lorminel'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

def allureVersion = "2.27.0",
    restAssuredVersion = "5.3.1",
    selenideVersion = "6.13.0",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.7",
    assertJVersion = "3.6.1",
    appiumVersion = "8.3.0",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22'
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "io.appium:java-client:$appiumVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task ios_tests(type: Test) {
    useJUnitPlatform {
        includeTags("ios_tests")
    }
}
task android_tests(type: Test) {
    useJUnitPlatform {
        includeTags("android_tests")
    }
}